meta(charset='utf-8')
meta(name='viewport', content='width=device-width, initial-scale=1')
title OddAndEvenSpliter 
link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css')
.box
  .field
    label#labelNumber.label Number
    form(action='http://localhost:5000/', method='POST')
      .control
       input#inputNumbers.input(type='number', name='number', placeholder='Number') 
       button(type="submit")#AddNumbers.button.is-primary.is-large.is-half.has-text-white.is.mt-3.ml-3
        .p Add Number
    form(action='http://localhost:5000/', method='GET')
      #DisplayNumbers.textarea.textarea.readonly.mt-3
        .p Hinzugef√ºgte Nummern
    form(action='http://localhost:5000/submit', method='POST')    
     button(type='submit')#Split.button.is-primary.is-large.is-half.has-text-white.is.mt-3.ml-3
      .p Split
    form(action='http://localhost:5000/delete', method='POST')  
     button(type='submit')#Split.button.is-Danger.is-large.is-half.has-text-white.ml-3
      .p Delete 
  form(action='http://localhost:5000/', method='GET')
    #DisplayEven.textarea.textarea.readonly.mt-3
      .p Gerade Zahlen
    #DisplayOdd.textarea.textarea.readonly.mt-5
      .p ungerade Zahlen 
script.
  async function getData(){
  const displayOdd = document.getElementById('DisplayOdd');
  const displayEven = document.getElementById('DisplayEven');
  const displayNumbers = document.getElementById('DisplayNumbers');
  const response = await fetch('http://localhost:5000/api');
  const data = await response.json();
  const {Numbers, OddNumbers, EvenNumbers} = data;
  displayNumbers.innerText = 'All Numbers: ' + Numbers;
  displayEven.innerText = 'All Even Numbers: '+ EvenNumbers;
  displayOdd.innerText = 'All Odd Numbers: ' + OddNumbers;
  console.log(data);
  }
  getData();
